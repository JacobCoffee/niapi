name: Test

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      coverage:
        required: false
        type: boolean
        default: false
      os:
        required: false
        type: string
        default: "ubuntu-latest"
      integration:
        required: false
        type: boolean
        default: false

env:
  SECRET_KEY: "ThisIsABadSecret"

jobs:
  test:
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.integrations && 15 || 30 }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        if: runner.os != 'Windows'
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: v1-venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Set pythonpath
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
      - name: Test
        if: ${{ !inputs.coverage }}
        run: |
          source $VENV
          pytest
      - name: Test with coverage
        if: inputs.coverage
        run: poetry run pytest tests --cov=app --cov-report=xml
      - uses: actions/upload-artifact@v3
        if: inputs.coverage
        with:
          name: coverage-xml
          path: coverage.xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
